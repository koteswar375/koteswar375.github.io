{"version":3,"sources":["assets/dp.png","Components/Header/Header.js","Components/Intro/Intro.js","Components/AboutMe/AboutMe.js","Components/Content/Articles/Articles.js","Components/Content/Projects/Projects.js","Components/Content/Content.js","Components/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","M","className","data-target","to","pathname","target","id","Component","Intro","props","alt","src","profilePic","AboutMe","Articles","articles","map","article","key","rel","href","link","height","thumbnail","title","Projects","Repos","repos","repo","name","Content","state","FetchMediumArticles","axios","get","FetchDevArticles","GetGithubRepos","Promise","all","this","then","res","console","log","data","mediumArticles","items","filter","item","i","categories","length","pubDate","devArticles","url","published_at","social_image","tags","split","githubRepos","html_url","updated_at","setState","exact","path","render","Contact","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.335ccc0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dp.3e329131.png\";","import React, { Component } from 'react';\r\nimport './Header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport * as M from 'materialize-css';\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav-wrapper\">\r\n                <div data-target=\"mobile-demo\" className=\"sidenav-trigger hide-on-large-only\"><i className=\"material-icons\">menu</i></div>\r\n                <div className=\"header grey darken-3  white-text row hide-on-med-and-down\">\r\n                    <div className=\"title col s12 m12 l4\"> <Link to=\"/\">KOTESWAR RAO MEESALA</Link></div>\r\n                    <Link to={{pathname: \"https://registry.jsonresume.org/koteswar375\"}} target=\"_blank\" className=\"col s12 m6 l1 offset-l6\">Resume</Link>\r\n                    {/* <Link to=\"/contact\" className=\"col s12 m6 l1\">Contact</Link> */}\r\n\r\n                </div>\r\n                <ul className=\"sidenav\" id=\"mobile-demo\">\r\n                    <li className=\"sidenav-close\"> <Link to=\"/\">KOTESWAR RAO MEESALA</Link></li>\r\n                    <li className=\"sidenav-close\"><Link to={{pathname: \"https://registry.jsonresume.org/koteswar375\"}} target=\"_blank\">Resume</Link></li>\r\n                    {/* <li className=\"sidenav-close\"><Link to=\"/contact\">Contact</Link></li> */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Intro.css';\r\nimport profilePic from '../../assets/dp.png';\r\n\r\n\r\nconst Intro = (props) => {\r\n    return (\r\n        <div className=\"intro\">\r\n            <div className=\"job-title center-align\">FULL STACK DEVELOPER</div>\r\n            <div className=\"profile-pic\">\r\n                <img alt=\"Profile\" src={profilePic}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Intro;","import React from 'react';\r\nimport './AboutMe.css';\r\n\r\nconst AboutMe = (props) => {\r\n\r\n\r\n    return (\r\n        <div className=\"aboutme  row center-align\">\r\n                <h5 className=\"col l12\">ABOUT ME</h5>\r\n                <p className=\"col l6 m8\">I am a passionate software developer with five years experience in frontend, backend frameworks, libraries, tools to develop web apps that scale across users. </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport './Articles.css';\r\n\r\nconst Articles = (props) => {\r\n\r\n    const articles = props.articles;\r\n    return (\r\n        <div>\r\n            {articles ? articles.map(article => {\r\n                return (\r\n\r\n                    <div className=\"container\" key={article.id}>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={article.link}>\r\n                        <div className=\"card horizontal\">\r\n                            <div className=\"card-image\">\r\n                                <img alt=\"thumbnail\" height=\"150\" src={article.thumbnail} />\r\n                            </div>\r\n                                <div className=\"card-stacked\">\r\n                                    <div className=\"card-content valign-wrapper center-align grey-text text-darken-4\">\r\n                                        <h6>{article.title}</h6>\r\n                                    </div>\r\n                                    <div className=\"card-action\">\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </a>\r\n                            {/* <div className=\"card-panel\">\r\n                    <span className=\"blue-text text-darken-2\">{article.title}</span>\r\n                </div> */}\r\n                        </div>\r\n            )}\r\n            ) : (\r\n                        <div>No articles to display</div>\r\n                )\r\n            }\r\n                    </div>\r\n                )\r\n            };\r\n\r\nexport default Articles;","import React from 'react';\r\n\r\nconst Projects = (props) => {\r\n    const Repos = props.repos.map(repo => {\r\n        return (\r\n            <div className=\"card-panel\" key={repo.id}>\r\n                <span className=\"blue-text text-darken-2\">{repo.name}</span>\r\n            </div>\r\n        )\r\n    });\r\n    return (\r\n        <div className=\"container\">\r\n            {Repos}\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Projects;","import React, {Component} from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Content.css';\r\nimport Articles from './Articles/Articles';\r\nimport Projects from './Projects/Projects';\r\nimport Skills from './Skills/Skills';\r\nimport TimeLine from './Timeline/TimeLine';\r\n\r\nclass Content extends Component {\r\n    state = {\r\n        articles : [],\r\n        repos: []\r\n    }\r\n    FetchMediumArticles = () => axios.get('https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@koteswar.meesala');\r\n    FetchDevArticles = () => axios.get('https://dev.to/api/articles?username=koteswar375');\r\n    GetGithubRepos = () => axios.get('https://api.github.com/users/koteswar375/repos');\r\n    componentDidMount () {\r\n        Promise.all([this.FetchMediumArticles(),this.FetchDevArticles(), this.GetGithubRepos()])\r\n        .then(res => {\r\n            console.log(res[2].data)\r\n            const mediumArticles = res[0].data.items.filter((item,i) => item.categories.length > 0)\r\n            .map((item,i)=> {\r\n                const {link, pubDate, thumbnail, title, categories} = item;\r\n                return {link, pubDate, thumbnail, title, id:i+1, categories}\r\n            });\r\n            const devArticles = res[1].data.map((item,i)=> {\r\n                const {url, published_at, social_image, title, id, tags} = item;\r\n                return {link:url, pubDate:published_at, thumbnail:social_image, title, id, categories: tags.split(',')}\r\n            });\r\n            const githubRepos = res[2].data.map((item,i)=> {\r\n                const {html_url, updated_at, name, id} = item;\r\n                return {url:html_url, updated_at, name, id}\r\n            });;\r\n            this.setState({articles:[...mediumArticles, ...devArticles], repos: githubRepos});\r\n        })\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div>\r\n            <div className=\"list-items\">\r\n                {/* <li><Link to=\"/\">TIMELINE</Link></li> */}\r\n                <li><Link to=\"/\">ARTICLES</Link></li>\r\n                <li><Link to=\"/projects\">GITHUB</Link></li>\r\n                {/* <li><Link to=\"/skills\">SKILLS</Link></li> */}\r\n            </div>\r\n            <div className=\"list-item-content\">\r\n                <Switch>\r\n                    {/* <Route exact path=\"/\" component={TimeLine}></Route> */}\r\n                    <Route exact path=\"/\" render={(props) => <Articles {...props} articles={this.state.articles}/>}></Route>\r\n                    <Route exact path=\"/projects\" render={(props) => <Projects {...props} repos={this.state.repos}/>}></Route>\r\n                    {/* <Route exact path=\"/skills\" component={Skills}></Route> */}\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\n\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>Contact me at koteswar.meesala@gmail.com</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header';\r\nimport Intro from './Components/Intro/Intro';\r\nimport AboutMe from './Components/AboutMe/AboutMe';\r\nimport Content from './Components/Content/Content';\r\nimport Contact from './Components/Contact/Contact';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <Switch>\r\n        <Route path=\"/contact\">\r\n          <Contact/>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Intro></Intro>\r\n          <AboutMe></AboutMe>\r\n          <Content></Content>\r\n        </Route>\r\n      </Switch>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}